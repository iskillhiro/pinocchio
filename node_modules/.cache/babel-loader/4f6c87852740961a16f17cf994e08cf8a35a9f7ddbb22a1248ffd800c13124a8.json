{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Coins\\\\Coins.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport bronzeCoin from '../../../assets/pictures/coins/bronze/coin_front.svg';\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin_front.svg';\nimport treeIcon from '../../../assets/pictures/tree.svg';\nimport walletIcon from '../../../assets/pictures/wallet.svg';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { getId } from '../../../utils/config';\nimport { Loader } from '../../ui/Loader/Loader';\nimport './Coins';\nimport './Coins.css';\nimport ProgressBar from './ProgressBar';\nimport style from './interface.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst Coins = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [process, setProcess] = useState(false);\n  const [displayedBalance, setDisplayedBalance] = useState(0);\n  const telegramId = getId();\n  const [user, setUser] = useState({});\n  const fetchUserData = async () => {\n    try {\n      const response = await axiosDB.get(`/user/${telegramId}`);\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const incrementBalance = () => {\n    let start = displayedBalance;\n    let end = user.tree.lootBalance;\n    let increment = (end - start) / 30;\n    let interval = 10;\n    const intervalId = setInterval(() => {\n      start += increment;\n      if (start >= end) {\n        start = end;\n        clearInterval(intervalId);\n      }\n      setDisplayedBalance(Math.floor(start));\n    }, interval);\n    return () => clearInterval(intervalId);\n  };\n  useEffect(() => {\n    fetchUserData();\n    const intervalId = setInterval(fetchUserData, 10000);\n    return () => clearInterval(intervalId);\n  }, [telegramId]);\n  useEffect(() => {\n    if (user.tree) {\n      incrementBalance();\n    }\n  }, [user.tree]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this);\n  }\n  const getActiveBoostsCount = () => {\n    return user.treeCoinBoosts.reduce((count, boost) => count + (boost.status ? 1 : 0), 0);\n  };\n  const renderButton = () => {\n    if (user.tree.isActive) {\n      if (user.tree.landingEndDate && new Date(user.tree.landingEndDate) > Date.now()) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gradient-btn\",\n          disabled: true,\n          children: \"Claim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: claim,\n          className: \"gradient-btn\",\n          children: process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 18\n          }, this) : 'Claim'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this);\n      }\n    } else if (user.tree.coinPlanted > 0) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startLanding,\n        className: \"gradient-btn\",\n        children: process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this) : 'Plant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"gradient-btn\",\n        disabled: true,\n        children: \"Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  const updateUserData = async () => {\n    try {\n      const response = await axiosDB.get(`/user/${telegramId}`);\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error updating user data:', error);\n    }\n  };\n  const plantCoin = async () => {\n    if (!user.tree.isActive) {\n      try {\n        const response = await axiosDB.post('/tree/plant', {\n          telegramId: user.telegramId\n        });\n        tg.HapticFeedback.impactOccurred('light');\n        if (response.status === 200) {\n          updateUserData();\n        }\n      } catch (error) {\n        console.error('Error planting coin:', error);\n      }\n    }\n  };\n  const startLanding = async () => {\n    setProcess(true);\n    try {\n      const response = await axiosDB.put('/tree/start', {\n        telegramId: user.telegramId\n      });\n      tg.HapticFeedback.impactOccurred('light');\n      if (response.status === 200) {\n        updateUserData();\n      }\n    } catch (error) {\n      console.error('Error starting landing:', error);\n    } finally {\n      setProcess(false);\n    }\n  };\n  const claim = async () => {\n    setProcess(true);\n    try {\n      const response = await axiosDB.get(`/tree/claim/${user.telegramId}`);\n      tg.HapticFeedback.impactOccurred('light');\n      if (response.status === 200) {\n        updateUserData();\n      }\n    } catch (error) {\n      console.error('Error claiming coins:', error);\n    } finally {\n      setProcess(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container coins\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title coins gradient up-case no-wrap fade-in\",\n      children: \"Pinocchio Coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"balance\",\n      children: [displayedBalance, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bronzeCoin,\n          alt: \"bronze coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.tree_zone,\n      children: [Array.from({\n        length: Math.min(user.tree.coinPlanted, 7)\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${style.coin} active fade-in`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./zecchino.svg\",\n          alt: \"coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 8\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: plantCoin,\n        className: \"fade-in main-tree pointer\",\n        src: treeIcon,\n        alt: \"tree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"planted-coins\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"coin-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"count\",\n          children: user.tree.coinPlanted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: goldenCoin,\n            alt: \"golden coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"percent-count\",\n        children: [\"+\", /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"count\",\n          children: getActiveBoostsCount() * 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 7\n        }, this), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }, this), user.tree.isActive && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      min: new Date(user.tree.landingStartDate),\n      max: new Date(user.tree.landingEndDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tools\",\n      children: user.treeCoinBoosts.map((boost, index) => {\n        const iconPath = require(`/src/assets/pictures/${boost.icon}`);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block\",\n          style: {\n            opacity: boost.status ? 1 : 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icon\",\n            src: iconPath,\n            alt: boost.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: boost.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 8\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group coins\",\n      children: [renderButton(), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/wallet\",\n        className: \"block\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon\",\n          src: walletIcon,\n          alt: \"wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      telegramId: telegramId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 3\n  }, this);\n};\n_s(Coins, \"bIhlegIcvVx96AxoDfq3OyamLUM=\");\n_c = Coins;\nexport default Coins;\nvar _c;\n$RefreshReg$(_c, \"Coins\");","map":{"version":3,"names":["React","useEffect","useState","bronzeCoin","goldenCoin","treeIcon","walletIcon","axiosDB","getId","Loader","ProgressBar","style","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","Coins","_s","loading","setLoading","process","setProcess","displayedBalance","setDisplayedBalance","telegramId","user","setUser","fetchUserData","response","get","data","error","console","incrementBalance","start","end","tree","lootBalance","increment","interval","intervalId","setInterval","clearInterval","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getActiveBoostsCount","treeCoinBoosts","reduce","count","boost","status","renderButton","isActive","landingEndDate","Date","now","disabled","onClick","claim","coinPlanted","startLanding","updateUserData","plantCoin","post","HapticFeedback","impactOccurred","put","id","src","alt","tree_zone","Array","from","length","min","_","index","coin","landingStartDate","max","map","iconPath","require","icon","opacity","name","href","Navigation","_c","$RefreshReg$"],"sources":["E:/Pinocchio/pinocchio-react/src/components/screens/Coins/Coins.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport bronzeCoin from '../../../assets/pictures/coins/bronze/coin_front.svg'\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin_front.svg'\nimport treeIcon from '../../../assets/pictures/tree.svg'\nimport walletIcon from '../../../assets/pictures/wallet.svg'\nimport axiosDB from '../../../utils/axios/axiosConfig'\nimport { getId } from '../../../utils/config'\nimport { Loader } from '../../ui/Loader/Loader'\nimport './Coins'\nimport './Coins.css'\nimport ProgressBar from './ProgressBar'\nimport style from './interface.module.css'\nconst tg = window.Telegram.WebApp\n\nconst Coins = () => {\n\tconst [loading, setLoading] = useState(true)\n\tconst [process, setProcess] = useState(false)\n\tconst [displayedBalance, setDisplayedBalance] = useState(0)\n\tconst telegramId = getId()\n\tconst [user, setUser] = useState({})\n\n\tconst fetchUserData = async () => {\n\t\ttry {\n\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\n\t\t\tsetUser(response.data)\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching user data:', error)\n\t\t} finally {\n\t\t\tsetLoading(false)\n\t\t}\n\t}\n\n\tconst incrementBalance = () => {\n\t\tlet start = displayedBalance\n\t\tlet end = user.tree.lootBalance\n\t\tlet increment = (end - start) / 30\n\t\tlet interval = 10\n\n\t\tconst intervalId = setInterval(() => {\n\t\t\tstart += increment\n\t\t\tif (start >= end) {\n\t\t\t\tstart = end\n\t\t\t\tclearInterval(intervalId)\n\t\t\t}\n\t\t\tsetDisplayedBalance(Math.floor(start))\n\t\t}, interval)\n\n\t\treturn () => clearInterval(intervalId)\n\t}\n\n\tuseEffect(() => {\n\t\tfetchUserData()\n\t\tconst intervalId = setInterval(fetchUserData, 10000)\n\n\t\treturn () => clearInterval(intervalId)\n\t}, [telegramId])\n\n\tuseEffect(() => {\n\t\tif (user.tree) {\n\t\t\tincrementBalance()\n\t\t}\n\t}, [user.tree])\n\n\tif (loading) {\n\t\treturn (\n\t\t\t<div className='loader-container'>\n\t\t\t\t<Loader />\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst getActiveBoostsCount = () => {\n\t\treturn user.treeCoinBoosts.reduce(\n\t\t\t(count, boost) => count + (boost.status ? 1 : 0),\n\t\t\t0\n\t\t)\n\t}\n\n\tconst renderButton = () => {\n\t\tif (user.tree.isActive) {\n\t\t\tif (\n\t\t\t\tuser.tree.landingEndDate &&\n\t\t\t\tnew Date(user.tree.landingEndDate) > Date.now()\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<button className='gradient-btn' disabled>\n\t\t\t\t\t\tClaim\n\t\t\t\t\t</button>\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<button onClick={claim} className='gradient-btn'>\n\t\t\t\t\t\t{process ? <Loader /> : 'Claim'}\n\t\t\t\t\t</button>\n\t\t\t\t)\n\t\t\t}\n\t\t} else if (user.tree.coinPlanted > 0) {\n\t\t\treturn (\n\t\t\t\t<button onClick={startLanding} className='gradient-btn'>\n\t\t\t\t\t{process ? <Loader /> : 'Plant'}\n\t\t\t\t</button>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button className='gradient-btn' disabled>\n\t\t\t\t\tPlant\n\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\t}\n\n\tconst updateUserData = async () => {\n\t\ttry {\n\t\t\tconst response = await axiosDB.get(`/user/${telegramId}`)\n\t\t\tsetUser(response.data)\n\t\t} catch (error) {\n\t\t\tconsole.error('Error updating user data:', error)\n\t\t}\n\t}\n\n\tconst plantCoin = async () => {\n\t\tif (!user.tree.isActive) {\n\t\t\ttry {\n\t\t\t\tconst response = await axiosDB.post('/tree/plant', {\n\t\t\t\t\ttelegramId: user.telegramId,\n\t\t\t\t})\n\t\t\t\ttg.HapticFeedback.impactOccurred('light')\n\t\t\t\tif (response.status === 200) {\n\t\t\t\t\tupdateUserData()\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error planting coin:', error)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst startLanding = async () => {\n\t\tsetProcess(true)\n\t\ttry {\n\t\t\tconst response = await axiosDB.put('/tree/start', {\n\t\t\t\ttelegramId: user.telegramId,\n\t\t\t})\n\t\t\ttg.HapticFeedback.impactOccurred('light')\n\t\t\tif (response.status === 200) {\n\t\t\t\tupdateUserData()\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Error starting landing:', error)\n\t\t} finally {\n\t\t\tsetProcess(false)\n\t\t}\n\t}\n\n\tconst claim = async () => {\n\t\tsetProcess(true)\n\t\ttry {\n\t\t\tconst response = await axiosDB.get(`/tree/claim/${user.telegramId}`)\n\t\t\ttg.HapticFeedback.impactOccurred('light')\n\t\t\tif (response.status === 200) {\n\t\t\t\tupdateUserData()\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Error claiming coins:', error)\n\t\t} finally {\n\t\t\tsetProcess(false)\n\t\t}\n\t}\n\treturn (\n\t\t<div className='container coins'>\n\t\t\t<h1 className='title coins gradient up-case no-wrap fade-in'>\n\t\t\t\tPinocchio Coin\n\t\t\t</h1>\n\t\t\t<h1 id='balance'>\n\t\t\t\t{displayedBalance}\n\t\t\t\t<div className='icon'>\n\t\t\t\t\t<img src={bronzeCoin} alt='bronze coin' />\n\t\t\t\t</div>\n\t\t\t</h1>\n\t\t\t<div className={style.tree_zone}>\n\t\t\t\t{Array.from(\n\t\t\t\t\t{ length: Math.min(user.tree.coinPlanted, 7) },\n\t\t\t\t\t(_, index) => (\n\t\t\t\t\t\t<div key={index} className={`${style.coin} active fade-in`}>\n\t\t\t\t\t\t\t<img src='./zecchino.svg' alt='coin' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t\t<img\n\t\t\t\t\tonClick={plantCoin}\n\t\t\t\t\tclassName='fade-in main-tree pointer'\n\t\t\t\t\tsrc={treeIcon}\n\t\t\t\t\talt='tree'\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div id='planted-coins'>\n\t\t\t\t<div id='coin-count'>\n\t\t\t\t\t<p id='count'>{user.tree.coinPlanted}</p>\n\t\t\t\t\t<div className='icon'>\n\t\t\t\t\t\t<img src={goldenCoin} alt='golden coin' />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div id='percent-count'>\n\t\t\t\t\t+<p id='count'>{getActiveBoostsCount() * 50}</p>%\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{user.tree.isActive && (\n\t\t\t\t<ProgressBar\n\t\t\t\t\tmin={new Date(user.tree.landingStartDate)}\n\t\t\t\t\tmax={new Date(user.tree.landingEndDate)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<div className='tools'>\n\t\t\t\t{user.treeCoinBoosts.map((boost, index) => {\n\t\t\t\t\tconst iconPath = require(`/src/assets/pictures/${boost.icon}`)\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclassName='block'\n\t\t\t\t\t\t\tstyle={{ opacity: boost.status ? 1 : 0.5 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img className='icon' src={iconPath} alt={boost.name} />\n\t\t\t\t\t\t\t<p>{boost.name}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div className='group coins'>\n\t\t\t\t{renderButton()}\n\t\t\t\t<a href='/wallet' className='block'>\n\t\t\t\t\t<img className='icon' src={walletIcon} alt='wallet' />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<Navigation telegramId={telegramId} />\n\t\t</div>\n\t)\n}\n\nexport default Coins\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}