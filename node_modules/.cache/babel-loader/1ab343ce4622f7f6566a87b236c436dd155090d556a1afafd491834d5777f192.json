{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Loading\\\\ProgressBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport style from './ProgressBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  min = 0,\n  max = 100\n}) => {\n  _s();\n  const progressBarRef = useRef(null);\n  const [progress, setProgress] = useState(min);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(prevProgress => {\n        const newProgress = Math.min(prevProgress + 10, max);\n        return newProgress;\n      });\n    }, 100); // Обновляем каждую 100 мс\n\n    // Останавливаем интервал, когда прогресс достигает максимума\n    if (progress >= max) {\n      clearInterval(interval);\n      navigate('/main');\n    }\n    return () => clearInterval(interval);\n  }, [progress, max]);\n  useEffect(() => {\n    if (progressBarRef.current) {\n      const progressPercent = Math.min(progress / max * 100, 100);\n      progressBarRef.current.style.width = `${progressPercent}%`;\n    }\n  }, [progress, max]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.progress_bar_container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: progressBarRef,\n      className: style.progress_bar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n_s(ProgressBar, \"YxWkXboOEttnOyxgmeQPWajUq7U=\", false, function () {\n  return [useNavigate];\n});\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","style","jsxDEV","_jsxDEV","ProgressBar","min","max","_s","progressBarRef","progress","setProgress","navigate","interval","setInterval","prevProgress","newProgress","Math","clearInterval","current","progressPercent","width","className","progress_bar_container","children","ref","progress_bar","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Pinocchio/pinocchio-react/src/components/screens/Loading/ProgressBar.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport style from './ProgressBar.module.css'\n\nconst ProgressBar = ({ min = 0, max = 100 }) => {\n\tconst progressBarRef = useRef(null)\n\tconst [progress, setProgress] = useState(min)\n\tconst navigate = useNavigate()\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetProgress(prevProgress => {\n\t\t\t\tconst newProgress = Math.min(prevProgress + 10, max)\n\t\t\t\treturn newProgress\n\t\t\t})\n\t\t}, 100) // Обновляем каждую 100 мс\n\n\t\t// Останавливаем интервал, когда прогресс достигает максимума\n\t\tif (progress >= max) {\n\t\t\tclearInterval(interval)\n\t\t\tnavigate('/main')\n\t\t}\n\n\t\treturn () => clearInterval(interval)\n\t}, [progress, max])\n\n\tuseEffect(() => {\n\t\tif (progressBarRef.current) {\n\t\t\tconst progressPercent = Math.min((progress / max) * 100, 100)\n\t\t\tprogressBarRef.current.style.width = `${progressPercent}%`\n\t\t}\n\t}, [progress, max])\n\n\treturn (\n\t\t<div className={style.progress_bar_container}>\n\t\t\t<div ref={progressBarRef} className={style.progress_bar}></div>\n\t\t</div>\n\t)\n}\n\nexport default ProgressBar\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,GAAG,GAAG,CAAC;EAAEC,GAAG,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAMC,cAAc,GAAGV,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACM,GAAG,CAAC;EAC7C,MAAMM,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9BH,SAAS,CAAC,MAAM;IACf,MAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAClCH,WAAW,CAACI,YAAY,IAAI;QAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACX,GAAG,CAACS,YAAY,GAAG,EAAE,EAAER,GAAG,CAAC;QACpD,OAAOS,WAAW;MACnB,CAAC,CAAC;IACH,CAAC,EAAE,GAAG,CAAC,EAAC;;IAER;IACA,IAAIN,QAAQ,IAAIH,GAAG,EAAE;MACpBW,aAAa,CAACL,QAAQ,CAAC;MACvBD,QAAQ,CAAC,OAAO,CAAC;IAClB;IAEA,OAAO,MAAMM,aAAa,CAACL,QAAQ,CAAC;EACrC,CAAC,EAAE,CAACH,QAAQ,EAAEH,GAAG,CAAC,CAAC;EAEnBT,SAAS,CAAC,MAAM;IACf,IAAIW,cAAc,CAACU,OAAO,EAAE;MAC3B,MAAMC,eAAe,GAAGH,IAAI,CAACX,GAAG,CAAEI,QAAQ,GAAGH,GAAG,GAAI,GAAG,EAAE,GAAG,CAAC;MAC7DE,cAAc,CAACU,OAAO,CAACjB,KAAK,CAACmB,KAAK,GAAG,GAAGD,eAAe,GAAG;IAC3D;EACD,CAAC,EAAE,CAACV,QAAQ,EAAEH,GAAG,CAAC,CAAC;EAEnB,oBACCH,OAAA;IAAKkB,SAAS,EAAEpB,KAAK,CAACqB,sBAAuB;IAAAC,QAAA,eAC5CpB,OAAA;MAAKqB,GAAG,EAAEhB,cAAe;MAACa,SAAS,EAAEpB,KAAK,CAACwB;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAER,CAAC;AAAAtB,EAAA,CAjCKH,WAAW;EAAA,QAGCJ,WAAW;AAAA;AAAA8B,EAAA,GAHvB1B,WAAW;AAmCjB,eAAeA,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}