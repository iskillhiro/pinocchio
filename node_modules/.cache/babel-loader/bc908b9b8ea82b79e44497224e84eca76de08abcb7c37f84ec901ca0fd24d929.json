{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Main\\\\TapZone.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useState } from 'react';\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin.svg';\nimport silverCoin from '../../../assets/pictures/coins/silver/coin.svg';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst TapZone = ({\n  telegramId,\n  currentEnergy,\n  setCurrentEnergy,\n  energyReduction,\n  stage,\n  boostData,\n  currentCoins,\n  setCurrentCoins,\n  updateUserData\n}) => {\n  _s();\n  const tapTimeout = useRef(null);\n  const latestCoins = useRef(currentCoins);\n  const [totalTaps, setTotalTaps] = useState(0);\n  const [taps, setTaps] = useState([]);\n  const pendingTaps = useRef(0);\n  const [boostActive, setBoostActive] = useState(false);\n  latestCoins.current = currentCoins;\n  const debouncedUpdateUserData = useCallback(() => {\n    if (tapTimeout.current) {\n      clearTimeout(tapTimeout.current);\n    }\n    tapTimeout.current = setTimeout(async () => {\n      if (latestCoins.current >= 1000000) {\n        updateUserData();\n      }\n      try {\n        const touchesToSend = pendingTaps.current;\n        const response = await axiosDB.put('/user/update', {\n          telegramId,\n          touches: touchesToSend\n        });\n        pendingTaps.current = 0;\n        setTotalTaps(0);\n      } catch (error) {\n        console.error('Error updating user:', error);\n      }\n    }, 350);\n  }, [telegramId, updateUserData, boostActive]);\n  const handleTouchStart = useCallback(e => {\n    var _boostData$dailyBoost, _boostData$dailyBoost2;\n    const touches = e.touches ? e.touches.length : 0;\n    const boostEndTime = new Date((boostData === null || boostData === void 0 ? void 0 : (_boostData$dailyBoost = boostData.dailyBoosts) === null || _boostData$dailyBoost === void 0 ? void 0 : (_boostData$dailyBoost2 = _boostData$dailyBoost[1]) === null || _boostData$dailyBoost2 === void 0 ? void 0 : _boostData$dailyBoost2.endTime) || 0);\n    const isBoostActive = boostEndTime > Date.now();\n    setBoostActive(isBoostActive);\n\n    // If not enough energy and boost is not active, return early\n    if (currentEnergy < energyReduction && !isBoostActive) {\n      console.log(`Not enough energy for reduction. Current energy: ${currentEnergy}`);\n      return;\n    }\n    if (tg.HapticFeedback) {\n      tg.HapticFeedback.impactOccurred('light');\n    }\n\n    // If boost is active, energySpent is 0, and newEnergy remains the same\n    const energySpent = isBoostActive ? 0 : energyReduction * touches;\n    const newEnergy = isBoostActive ? currentEnergy : Math.max(0, currentEnergy - energyReduction * touches);\n    const coinsToAdd = energyReduction * touches * (isBoostActive ? 10 : 1);\n\n    // Calculate tap positions\n    const newTaps = [];\n    for (let i = 0; i < touches; i++) {\n      const {\n        clientX,\n        clientY\n      } = e.touches[i];\n      const rect = e.target.getBoundingClientRect();\n      if (!rect) {\n        console.error('Unable to get bounding rect');\n        continue;\n      }\n      const newTap = {\n        id: Date.now() + i,\n        x: clientX - rect.left,\n        y: clientY - rect.top\n      };\n      newTaps.push(newTap);\n    }\n    setTaps(prevTaps => [...prevTaps, ...newTaps]);\n\n    // Remove tap animations after 1 second\n    setTimeout(() => {\n      setTaps(prevTaps => prevTaps.filter(tap => !newTaps.some(newTap => newTap.id === tap.id)));\n    }, 1000);\n    setCurrentEnergy(newEnergy);\n    setCurrentCoins(latestCoins.current + coinsToAdd);\n    pendingTaps.current += touches;\n    setTotalTaps(prev => prev + touches);\n    debouncedUpdateUserData();\n  }, [currentEnergy, energyReduction, boostData, setCurrentEnergy, setCurrentCoins, debouncedUpdateUserData]);\n  if (boostData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tap-zone\",\n      onTouchStart: handleTouchStart,\n      children: [boostData.upgradeBoosts[4].level === 2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/boosts/skin.svg\",\n        alt: \"skin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: stage === 1 ? silverCoin : goldenCoin,\n        alt: \"coin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 6\n      }, this), taps.map(tap => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tap_number\",\n        style: {\n          top: `${tap.y + 70}px`,\n          left: `${tap.x}px`\n        },\n        children: [\"+\", boostActive ? energyReduction * 10 : energyReduction]\n      }, tap.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this);\n  }\n  return null;\n};\n_s(TapZone, \"oOdDIzbb13TKsJ8WAXP4V25zrso=\");\n_c = TapZone;\nexport default TapZone;\nvar _c;\n$RefreshReg$(_c, \"TapZone\");","map":{"version":3,"names":["React","useCallback","useRef","useState","goldenCoin","silverCoin","axiosDB","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","TapZone","telegramId","currentEnergy","setCurrentEnergy","energyReduction","stage","boostData","currentCoins","setCurrentCoins","updateUserData","_s","tapTimeout","latestCoins","totalTaps","setTotalTaps","taps","setTaps","pendingTaps","boostActive","setBoostActive","current","debouncedUpdateUserData","clearTimeout","setTimeout","touchesToSend","response","put","touches","error","console","handleTouchStart","e","_boostData$dailyBoost","_boostData$dailyBoost2","length","boostEndTime","Date","dailyBoosts","endTime","isBoostActive","now","log","HapticFeedback","impactOccurred","energySpent","newEnergy","Math","max","coinsToAdd","newTaps","i","clientX","clientY","rect","target","getBoundingClientRect","newTap","id","x","left","y","top","push","prevTaps","filter","tap","some","prev","className","onTouchStart","children","upgradeBoosts","level","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","style","_c","$RefreshReg$"],"sources":["E:/Pinocchio/pinocchio-react/src/components/screens/Main/TapZone.jsx"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport goldenCoin from '../../../assets/pictures/coins/golden/coin.svg'\nimport silverCoin from '../../../assets/pictures/coins/silver/coin.svg'\nimport axiosDB from '../../../utils/axios/axiosConfig'\n\nconst tg = window.Telegram.WebApp\n\nconst TapZone = ({\n\ttelegramId,\n\tcurrentEnergy,\n\tsetCurrentEnergy,\n\tenergyReduction,\n\tstage,\n\tboostData,\n\tcurrentCoins,\n\tsetCurrentCoins,\n\tupdateUserData,\n}) => {\n\tconst tapTimeout = useRef(null)\n\tconst latestCoins = useRef(currentCoins)\n\tconst [totalTaps, setTotalTaps] = useState(0)\n\tconst [taps, setTaps] = useState([])\n\tconst pendingTaps = useRef(0)\n\tconst [boostActive, setBoostActive] = useState(false)\n\tlatestCoins.current = currentCoins\n\n\tconst debouncedUpdateUserData = useCallback(() => {\n\t\tif (tapTimeout.current) {\n\t\t\tclearTimeout(tapTimeout.current)\n\t\t}\n\n\t\ttapTimeout.current = setTimeout(async () => {\n\t\t\tif (latestCoins.current >= 1000000) {\n\t\t\t\tupdateUserData()\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst touchesToSend = pendingTaps.current\n\t\t\t\tconst response = await axiosDB.put('/user/update', {\n\t\t\t\t\ttelegramId,\n\t\t\t\t\ttouches: touchesToSend,\n\t\t\t\t})\n\n\t\t\t\tpendingTaps.current = 0\n\t\t\t\tsetTotalTaps(0)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error updating user:', error)\n\t\t\t}\n\t\t}, 350)\n\t}, [telegramId, updateUserData, boostActive])\n\n\tconst handleTouchStart = useCallback(\n\t\te => {\n\t\t\tconst touches = e.touches ? e.touches.length : 0\n\n\t\t\tconst boostEndTime = new Date(boostData?.dailyBoosts?.[1]?.endTime || 0)\n\t\t\tconst isBoostActive = boostEndTime > Date.now()\n\t\t\tsetBoostActive(isBoostActive)\n\n\t\t\t// If not enough energy and boost is not active, return early\n\t\t\tif (currentEnergy < energyReduction && !isBoostActive) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t`Not enough energy for reduction. Current energy: ${currentEnergy}`\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (tg.HapticFeedback) {\n\t\t\t\ttg.HapticFeedback.impactOccurred('light')\n\t\t\t}\n\n\t\t\t// If boost is active, energySpent is 0, and newEnergy remains the same\n\t\t\tconst energySpent = isBoostActive ? 0 : energyReduction * touches\n\t\t\tconst newEnergy = isBoostActive\n\t\t\t\t? currentEnergy\n\t\t\t\t: Math.max(0, currentEnergy - energyReduction * touches)\n\n\t\t\tconst coinsToAdd = energyReduction * touches * (isBoostActive ? 10 : 1)\n\n\t\t\t// Calculate tap positions\n\t\t\tconst newTaps = []\n\t\t\tfor (let i = 0; i < touches; i++) {\n\t\t\t\tconst { clientX, clientY } = e.touches[i]\n\t\t\t\tconst rect = e.target.getBoundingClientRect()\n\n\t\t\t\tif (!rect) {\n\t\t\t\t\tconsole.error('Unable to get bounding rect')\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tconst newTap = {\n\t\t\t\t\tid: Date.now() + i,\n\t\t\t\t\tx: clientX - rect.left,\n\t\t\t\t\ty: clientY - rect.top,\n\t\t\t\t}\n\n\t\t\t\tnewTaps.push(newTap)\n\t\t\t}\n\n\t\t\tsetTaps(prevTaps => [...prevTaps, ...newTaps])\n\n\t\t\t// Remove tap animations after 1 second\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetTaps(prevTaps =>\n\t\t\t\t\tprevTaps.filter(tap => !newTaps.some(newTap => newTap.id === tap.id))\n\t\t\t\t)\n\t\t\t}, 1000)\n\n\t\t\tsetCurrentEnergy(newEnergy)\n\t\t\tsetCurrentCoins(latestCoins.current + coinsToAdd)\n\n\t\t\tpendingTaps.current += touches\n\t\t\tsetTotalTaps(prev => prev + touches)\n\n\t\t\tdebouncedUpdateUserData()\n\t\t},\n\t\t[\n\t\t\tcurrentEnergy,\n\t\t\tenergyReduction,\n\t\t\tboostData,\n\t\t\tsetCurrentEnergy,\n\t\t\tsetCurrentCoins,\n\t\t\tdebouncedUpdateUserData,\n\t\t]\n\t)\n\n\tif (boostData) {\n\t\treturn (\n\t\t\t<div className='tap-zone' onTouchStart={handleTouchStart}>\n\t\t\t\t{boostData.upgradeBoosts[4].level === 2 ? (\n\t\t\t\t\t<img src='/boosts/skin.svg' alt='skin' />\n\t\t\t\t) : (\n\t\t\t\t\t<img src={stage === 1 ? silverCoin : goldenCoin} alt='coin' />\n\t\t\t\t)}\n\n\t\t\t\t{taps.map(tap => (\n\t\t\t\t\t<span\n\t\t\t\t\t\tkey={tap.id}\n\t\t\t\t\t\tclassName='tap_number'\n\t\t\t\t\t\tstyle={{ top: `${tap.y + 70}px`, left: `${tap.x}px` }}\n\t\t\t\t\t>\n\t\t\t\t\t\t+{boostActive ? energyReduction * 10 : energyReduction}\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n\treturn null\n}\n\nexport default TapZone\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}