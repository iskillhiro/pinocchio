{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Boosts\\\\UpgradeBoost.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axiosDB from '../../../utils/axios/axiosConfig';\nimport { Loader } from '../../ui/Loader/Loader';\nimport style from './UpgradeBoost.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tg = window.Telegram.WebApp;\nconst UpgradeBoostPopup = ({\n  handlePopupClose,\n  boost,\n  userData,\n  updateBoostData\n}) => {\n  _s();\n  const [process, setProcess] = useState(false);\n  const [currency, setCurrency] = useState('soldoTaps');\n  const upgradeBoost = async () => {\n    setProcess(true);\n    try {\n      const boostElem = boost[0];\n      const response = await axiosDB.put(`/upgradeBoost/${userData.telegramId}/${boostElem.name}/${currency}`);\n      if (response.status === 200) {\n        updateBoostData();\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setProcess(false);\n      if (tg.HapticFeedback) {\n        tg.HapticFeedback.impactOccurred('light');\n      }\n      handlePopupClose();\n    }\n  };\n  const activateTreeBoost = async () => {\n    setProcess(true);\n    try {\n      const boostElem = boost[0];\n      const response = await axiosDB.put(`/treeBoost/${userData.telegramId}/${boostElem.name}`);\n      if (response.status === 200) {\n        updateBoostData();\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setProcess(false);\n      if (tg.HapticFeedback) {\n        tg.HapticFeedback.impactOccurred('light');\n      }\n      handlePopupClose();\n    }\n  };\n  const handlePopupClick = event => {\n    event.stopPropagation();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-overlay\",\n    onClick: handlePopupClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup block\",\n      onClick: handlePopupClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"boost-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: '/boosts/' + boost[0].icon,\n            alt: \"boost icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"popup-title\",\n          children: boost[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this), boost[0].boostType !== 'one-time' && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"boost-level-info\",\n          children: boost[0].currency === 'soldo' && `${boost[0].level}→ ${boost[0].level + 1}` || '→ Activate'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), boost[0].currency !== 'zecchino' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.set_currency,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"soldo_currency\",\n          type: \"radio\",\n          name: \"set_currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: () => setCurrency('soldoTaps'),\n          autoFocus: true,\n          htmlFor: \"soldo_currency\",\n          className: style.soldo_currency,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: '/soldo.svg',\n            alt: \"Soldo Coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"zecchino_currency\",\n          type: \"radio\",\n          name: \"set_currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: () => setCurrency('zecchinoTaps'),\n          htmlFor: \"zecchino_currency\",\n          className: style.zecchino_currency,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: '/zecchino.svg',\n            alt: \"Zecchino Coin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }, this), boost[0].currency === 'zecchino' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: activateTreeBoost,\n        className: \"gradient-btn\",\n        children: process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 18\n        }, this) : 'Activate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }, this), boost[0].currency === 'soldo' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: upgradeBoost,\n        className: \"gradient-btn\",\n        children: process ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 18\n        }, this) : 'Upgrade'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n_s(UpgradeBoostPopup, \"er+B5VHfYHZobh7k7d6gaMwV6uc=\");\n_c = UpgradeBoostPopup;\nexport default UpgradeBoostPopup;\nvar _c;\n$RefreshReg$(_c, \"UpgradeBoostPopup\");","map":{"version":3,"names":["useState","axiosDB","Loader","style","jsxDEV","_jsxDEV","tg","window","Telegram","WebApp","UpgradeBoostPopup","handlePopupClose","boost","userData","updateBoostData","_s","process","setProcess","currency","setCurrency","upgradeBoost","boostElem","response","put","telegramId","name","status","error","console","log","HapticFeedback","impactOccurred","activateTreeBoost","handlePopupClick","event","stopPropagation","className","onClick","children","id","src","icon","alt","fileName","_jsxFileName","lineNumber","columnNumber","boostType","level","set_currency","type","autoFocus","htmlFor","soldo_currency","zecchino_currency","_c","$RefreshReg$"],"sources":["E:/Pinocchio/pinocchio-react/src/components/screens/Boosts/UpgradeBoost.jsx"],"sourcesContent":["import { useState } from 'react'\nimport axiosDB from '../../../utils/axios/axiosConfig'\nimport { Loader } from '../../ui/Loader/Loader'\nimport style from './UpgradeBoost.module.css'\n\nconst tg = window.Telegram.WebApp\n\nconst UpgradeBoostPopup = ({\n\thandlePopupClose,\n\tboost,\n\tuserData,\n\tupdateBoostData,\n}) => {\n\tconst [process, setProcess] = useState(false)\n\tconst [currency, setCurrency] = useState('soldoTaps')\n\n\tconst upgradeBoost = async () => {\n\t\tsetProcess(true)\n\t\ttry {\n\t\t\tconst boostElem = boost[0]\n\t\t\tconst response = await axiosDB.put(\n\t\t\t\t`/upgradeBoost/${userData.telegramId}/${boostElem.name}/${currency}`\n\t\t\t)\n\t\t\tif (response.status === 200) {\n\t\t\t\tupdateBoostData()\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t} finally {\n\t\t\tsetProcess(false)\n\t\t\tif (tg.HapticFeedback) {\n\t\t\t\ttg.HapticFeedback.impactOccurred('light')\n\t\t\t}\n\t\t\thandlePopupClose()\n\t\t}\n\t}\n\n\tconst activateTreeBoost = async () => {\n\t\tsetProcess(true)\n\t\ttry {\n\t\t\tconst boostElem = boost[0]\n\t\t\tconst response = await axiosDB.put(\n\t\t\t\t`/treeBoost/${userData.telegramId}/${boostElem.name}`\n\t\t\t)\n\t\t\tif (response.status === 200) {\n\t\t\t\tupdateBoostData()\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t} finally {\n\t\t\tsetProcess(false)\n\t\t\tif (tg.HapticFeedback) {\n\t\t\t\ttg.HapticFeedback.impactOccurred('light')\n\t\t\t}\n\t\t\thandlePopupClose()\n\t\t}\n\t}\n\n\tconst handlePopupClick = event => {\n\t\tevent.stopPropagation()\n\t}\n\n\treturn (\n\t\t<div className='popup-overlay' onClick={handlePopupClose}>\n\t\t\t<div className='popup block' onClick={handlePopupClick}>\n\t\t\t\t<div id='boost-info'>\n\t\t\t\t\t<div className='popup-icon'>\n\t\t\t\t\t\t<img src={'/boosts/' + boost[0].icon} alt='boost icon' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<h3 className='popup-title'>{boost[0].name}</h3>\n\t\t\t\t\t{boost[0].boostType !== 'one-time' && (\n\t\t\t\t\t\t<h3 className='boost-level-info'>\n\t\t\t\t\t\t\t{(boost[0].currency === 'soldo' &&\n\t\t\t\t\t\t\t\t`${boost[0].level}→ ${boost[0].level + 1}`) ||\n\t\t\t\t\t\t\t\t'→ Activate'}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{boost[0].currency !== 'zecchino' && (\n\t\t\t\t\t<div className={style.set_currency}>\n\t\t\t\t\t\t<input id='soldo_currency' type='radio' name='set_currency' />\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tonClick={() => setCurrency('soldoTaps')}\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\thtmlFor='soldo_currency'\n\t\t\t\t\t\t\tclassName={style.soldo_currency}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={'/soldo.svg'} alt='Soldo Coin' />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input id='zecchino_currency' type='radio' name='set_currency' />\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tonClick={() => setCurrency('zecchinoTaps')}\n\t\t\t\t\t\t\thtmlFor='zecchino_currency'\n\t\t\t\t\t\t\tclassName={style.zecchino_currency}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={'/zecchino.svg'} alt='Zecchino Coin' />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{boost[0].currency === 'zecchino' && (\n\t\t\t\t\t<button onClick={activateTreeBoost} className='gradient-btn'>\n\t\t\t\t\t\t{process ? <Loader /> : 'Activate'}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{boost[0].currency === 'soldo' && (\n\t\t\t\t\t<button onClick={upgradeBoost} className='gradient-btn'>\n\t\t\t\t\t\t{process ? <Loader /> : 'Upgrade'}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default UpgradeBoostPopup\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}