{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pinocchio\\\\pinocchio-react\\\\src\\\\components\\\\screens\\\\Main\\\\Balance\\\\Balance.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport goldenKey from '../../../../assets/pictures/keys/golden.svg';\nimport silverKey from '../../../../assets/pictures/keys/silver.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainBalance = ({\n  stage,\n  coins\n}) => {\n  _s();\n  const [displayedCoins, setDisplayedCoins] = useState(coins);\n  useEffect(() => {\n    // добавляет эффект постепенного обновления баланса\n    let start = displayedCoins;\n    let end = coins;\n    let increment = (end - start) / 5; // Делим на количество шагов, например, 30 шагов\n    let interval = 50; // Интервал обновления в миллисекундах\n\n    const intervalId = setInterval(() => {\n      start += increment;\n      if (start >= end) {\n        start = end;\n        clearInterval(intervalId);\n      }\n      setDisplayedCoins(Math.floor(start));\n    }, interval);\n    return () => clearInterval(intervalId);\n  }, [coins]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-balance\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"count\",\n      children: displayedCoins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        draggable: \"false\",\n        src: stage === 1 ? silverKey : goldenKey,\n        className: \"icon\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n_s(MainBalance, \"DQ0aT6LS88ZfS1q7JskSpFYLTRo=\");\n_c = MainBalance;\nexport default MainBalance;\nvar _c;\n$RefreshReg$(_c, \"MainBalance\");","map":{"version":3,"names":["React","useEffect","useState","goldenKey","silverKey","jsxDEV","_jsxDEV","MainBalance","stage","coins","_s","displayedCoins","setDisplayedCoins","start","end","increment","interval","intervalId","setInterval","clearInterval","Math","floor","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","draggable","src","alt","_c","$RefreshReg$"],"sources":["E:/Pinocchio/pinocchio-react/src/components/screens/Main/Balance/Balance.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport goldenKey from '../../../../assets/pictures/keys/golden.svg'\nimport silverKey from '../../../../assets/pictures/keys/silver.svg'\n\nconst MainBalance = ({ stage, coins }) => {\n\tconst [displayedCoins, setDisplayedCoins] = useState(coins)\n\n\tuseEffect(() => {\n\t\t// добавляет эффект постепенного обновления баланса\n\t\tlet start = displayedCoins\n\t\tlet end = coins\n\t\tlet increment = (end - start) / 5 // Делим на количество шагов, например, 30 шагов\n\t\tlet interval = 50 // Интервал обновления в миллисекундах\n\n\t\tconst intervalId = setInterval(() => {\n\t\t\tstart += increment\n\t\t\tif (start >= end) {\n\t\t\t\tstart = end\n\t\t\t\tclearInterval(intervalId)\n\t\t\t}\n\t\t\tsetDisplayedCoins(Math.floor(start))\n\t\t}, interval)\n\n\t\treturn () => clearInterval(intervalId)\n\t}, [coins])\n\n\treturn (\n\t\t<div id='main-balance'>\n\t\t\t<h1 id='count'>{displayedCoins}</h1>\n\t\t\t<div className='key'>\n\t\t\t\t<img\n\t\t\t\t\tdraggable='false'\n\t\t\t\t\tsrc={stage === 1 ? silverKey : goldenKey}\n\t\t\t\t\tclassName='icon'\n\t\t\t\t\talt=''\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default MainBalance\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,6CAA6C;AACnE,OAAOC,SAAS,MAAM,6CAA6C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAACO,KAAK,CAAC;EAE3DR,SAAS,CAAC,MAAM;IACf;IACA,IAAIY,KAAK,GAAGF,cAAc;IAC1B,IAAIG,GAAG,GAAGL,KAAK;IACf,IAAIM,SAAS,GAAG,CAACD,GAAG,GAAGD,KAAK,IAAI,CAAC,EAAC;IAClC,IAAIG,QAAQ,GAAG,EAAE,EAAC;;IAElB,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACpCL,KAAK,IAAIE,SAAS;MAClB,IAAIF,KAAK,IAAIC,GAAG,EAAE;QACjBD,KAAK,GAAGC,GAAG;QACXK,aAAa,CAACF,UAAU,CAAC;MAC1B;MACAL,iBAAiB,CAACQ,IAAI,CAACC,KAAK,CAACR,KAAK,CAAC,CAAC;IACrC,CAAC,EAAEG,QAAQ,CAAC;IAEZ,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACvC,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,oBACCH,OAAA;IAAKgB,EAAE,EAAC,cAAc;IAAAC,QAAA,gBACrBjB,OAAA;MAAIgB,EAAE,EAAC,OAAO;MAAAC,QAAA,EAAEZ;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCrB,OAAA;MAAKsB,SAAS,EAAC,KAAK;MAAAL,QAAA,eACnBjB,OAAA;QACCuB,SAAS,EAAC,OAAO;QACjBC,GAAG,EAAEtB,KAAK,KAAK,CAAC,GAAGJ,SAAS,GAAGD,SAAU;QACzCyB,SAAS,EAAC,MAAM;QAChBG,GAAG,EAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAAjB,EAAA,CAnCKH,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAqCjB,eAAeA,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}